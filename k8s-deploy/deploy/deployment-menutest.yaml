apiVersion: apps/v1
kind: Deployment
metadata:	#元数据
  annotations: #注释信息
    deployment.kubernetes.io/revision: '1'
    k8s.kuboard.cn/ingress: 'false'
    k8s.kuboard.cn/service: NodePort
    k8s.kuboard.cn/workload: menutest
  labels: #标签信息
    appname: menutest
  name: menutest #名称
  namespace: testmydocker
spec: 
  replicas: 1 #副本数量
  selector: #标签选择器
    matchLabels:
      appname: menutest
      version: v1.0.0
  strategy: #滚动升级策略
    type: RollingUpdate #类型
    rollingUpdate: 
      maxSurge: 25%
      maxUnavailable: 25% #滚动升级时允许的最大Unavailable的pod个数
  template:	
    metadata:	#元数据
      labels: #标签
        appname: menutest
        version: v1.0.0
    spec: #定义容器模板，该模板可以包含多个容器
      containers:
      - name: cntmenutest
        image: caijinhao/menutest:latest
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        env:
        - name: VERSION
          value: v1.0.0
        volumeMounts:	#挂载volumes中定义的磁盘
        - name: menutestvm #共享存储卷名称
          mountPath: /app/Logs #此目录必须是非运行目录，非Dockerfile打包文件
      restartPolicy: Always	# Pod的重启策略
      volumes: #在该pod上定义共享存储卷列表
      - name: menutestvm # 共享存储卷名称
        persistentVolumeClaim: #volumes类型为pvc
          claimName: test-claim #nfs-imagenet  #关联pvc名称需要和pvc的命名空间一致才能找到，必须在节点上安装nfs客户端
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:  # 硬策略必须，如果nodeSelectorTerms下面有多个选项的话，满足任何一个条件就可以了；如果matchExpressions有多个选项的话，则必须同时满足这些条件才能正常调度 POD。
            nodeSelectorTerms:
            - matchExpressions: #匹配表达式，In：label 的值在某个列表中，NotIn：label 的值不在某个列表中，Gt：label 的值大于某个值，Lt：label 的值小于某个值，Exists：某个 label 存在，DoesNotExist：某个 label 不存在 lable的name=key,value=values
              - key: kubernetes.io/hostname
                operator: In
                values:
                - node1